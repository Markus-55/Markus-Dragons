{
  "contractName": "IDragonMarketplace",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "TxType",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "MarketTransaction",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dragonContractAddress",
          "type": "address"
        }
      ],
      "name": "setDragonContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getOffer",
      "outputs": [
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllTokenOnSale",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "listOfOffers",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "setOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "removeOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "_seller",
          "type": "address"
        }
      ],
      "name": "buyDragon",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"TxType\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"MarketTransaction\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_seller\",\"type\":\"address\"}],\"name\":\"buyDragon\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllTokenOnSale\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"listOfOffers\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getOffer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"removeOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dragonContractAddress\",\"type\":\"address\"}],\"name\":\"setDragonContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"setOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"buyDragon(uint256,address)\":{\"notice\":\"Executes the purchase of _tokenId. Sends the funds to the seller and transfers the token using transferFrom in Dragoncontract. Emits the MarketTransaction event with txType \\\"Buy\\\". Requirement: The msg.value needs to equal the price of _tokenId Requirement: There must be an active offer for _tokenId\"},\"getAllTokenOnSale()\":{\"notice\":\"Get all tokenId's that are currently for sale. Returns an empty arror if none exist.\"},\"getOffer(uint256)\":{\"notice\":\"Get the details about a offer for _tokenId. Throws an error if there is no active offer for _tokenId.\"},\"removeOffer(uint256)\":{\"notice\":\"Removes an existing offer. Emits the MarketTransaction event with txType \\\"Remove offer\\\" Requirement: Only the seller of _tokenId can remove an offer.\"},\"setDragonContract(address)\":{\"notice\":\"Set the current DragonContract address and initialize the instance of Dragoncontract. Requirement: Only the contract owner can call.\"},\"setOffer(uint256,uint256)\":{\"notice\":\"Creates a new offer for _tokenId for the price _price. Emits the MarketTransaction event with txType \\\"Create offer\\\" Requirement: Only the owner of _tokenId can create an offer. Requirement: There can only be one active offer for a token at a time. Requirement: Marketplace contract (this) needs to be an approved operator when the offer is created.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Markus-Dragons/contracts/IDragonMarketplace.sol\":\"IDragonMarketplace\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Markus-Dragons/contracts/Dragoncontract.sol\":{\"keccak256\":\"0x9b7b1524566197a9ca7b052c43311498d3f47fc0a7223423a206de69a95a7b3a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a4479e000add89eb5e39e3c917006f734b4a63b9656cd57ab92c0b70e11a2f89\",\"dweb:/ipfs/QmW1fNoD6b3vzJPVnFKi2iR6QRPMA2iTa1rW7vepWQJqzW\"]},\"/C/Markus-Dragons/contracts/IDragonMarketplace.sol\":{\"keccak256\":\"0x1584b5197c4ec6bf1a3d9ca1955a6d451d8f59eed8e1650838fe69aaa8678bde\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c30c71110a4bea1927bc7da6cec40f204338a176779dfcbb44bbdfd3715ac0d2\",\"dweb:/ipfs/QmbWf8k8Vpvy1vPZqcZ8nsbC4QKeAjvdpcLCog4tDDmqM5\"]},\"/C/Markus-Dragons/contracts/IERC721.sol\":{\"keccak256\":\"0x23a1dfcc6cf1384bf0a5528d750f715a83e39304e49ebd9208576bb4a0402a1b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://32b04fe1c509318dc93cd79dc43b2b3e3b9ca03b13ac5c9c2b8a7fd50d1df594\",\"dweb:/ipfs/Qmc616mzqeWkqCj7pRgB4xzHVPwchva8nKc74JgqbwxXyq\"]},\"/C/Markus-Dragons/contracts/IERC721Receiver.sol\":{\"keccak256\":\"0xc362be2b740a3c2ad23a31fd28add3e51a6cf4a221ecb62d1448e9b87c3073b1\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8b2b21fd7353089f6ce38adacebba07054b5c62ebf9acf18b6ad492030ac8f5b\",\"dweb:/ipfs/Qmd18DbbHiVo2vmJEkUd5Xs2nVqKgBXLr9pNsvLSXHnahV\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xc87ed9329c6de7f34615b34e85cedf076a62b5020d1edb4a6d5f8aa97974426b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bfb995673003ecee14330aa3cb9afac03188e3b6444b1ad5b76cb781e4146f74\",\"dweb:/ipfs/QmNoAgXsSnH1uxvUhGvHYphkgMXEYACJCPxSHHuf1KTTVf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2c035598c90ecd26c00f2b73207b4b4d52e3c46484f6e1380e4f9bb4a43cabc7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b04637146b14ae894c047c0dbd933c3ebf76898cd895aa881f5ea4d5db337da2\",\"dweb:/ipfs/QmZE73N5EvuAch1CX88DePfCgmwjLvKSaFEunjy5UoAuU9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x681ab5b6cd77464aec17a8fefa55d054f2cfd9a1f5b5de5be1f13a9cdf83bd28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0040db56603a9105a1b5571f3ef8cc700068930125675065816dc83bfdc459fb\",\"dweb:/ipfs/QmaCJWcBpSwqhYHzCzE2Hg1zjQkaBp8S1git5shZaGJTe7\"]},\"@openzeppelin/contracts/utils/escrow/Escrow.sol\":{\"keccak256\":\"0xb7383cf59a34eec3e99a891510c5b865c1fab92f8666a968f004bfb524b0ab6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95698ff015a5875dae9907ed973e62ecdc298ec4f8372e2defa90b75f86a8522\",\"dweb:/ipfs/QmX4WEhDmhN8ZhLeDmjU6qeinppXcfe2Kzw6F9TEqtPUJQ\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: UNLICENSED\r\n\r\npragma solidity ^0.8.6;\r\n\r\nimport \"./Dragoncontract.sol\";\r\nimport \"@openzeppelin/contracts/utils/escrow/Escrow.sol\";\r\n\r\n/*\r\n * Market place to trade dragons (should **in theory** be used for any ERC721 token)\r\n * It needs an existing Dragon contract to interact with\r\n * Note: it does not inherit from the dragon contracts\r\n * Note: The contract needs to be an operator for everyone who is selling through this contract.\r\n */\r\ninterface IDragonMarketplace {\r\n\r\n    event MarketTransaction(string TxType, address owner, uint256 tokenId);\r\n\r\n    /**\r\n    * Set the current DragonContract address and initialize the instance of Dragoncontract.\r\n    * Requirement: Only the contract owner can call.\r\n     */\r\n    function setDragonContract(address _dragonContractAddress) external;\r\n\r\n    /**\r\n    * Get the details about a offer for _tokenId. Throws an error if there is no active offer for _tokenId.\r\n     */\r\n    function getOffer(uint256 _tokenId) external view returns (address seller, uint256 price, uint256 index, uint256 tokenId, bool active);\r\n\r\n    /**\r\n    * Get all tokenId's that are currently for sale. Returns an empty arror if none exist.\r\n     */\r\n    function getAllTokenOnSale() external view returns(uint256[] memory listOfOffers);\r\n\r\n    /**\r\n    * Creates a new offer for _tokenId for the price _price.\r\n    * Emits the MarketTransaction event with txType \"Create offer\"\r\n    * Requirement: Only the owner of _tokenId can create an offer.\r\n    * Requirement: There can only be one active offer for a token at a time.\r\n    * Requirement: Marketplace contract (this) needs to be an approved operator when the offer is created.\r\n     */\r\n    function setOffer(uint256 _price, uint256 _tokenId) external;\r\n\r\n    /**\r\n    * Removes an existing offer.\r\n    * Emits the MarketTransaction event with txType \"Remove offer\"\r\n    * Requirement: Only the seller of _tokenId can remove an offer.\r\n     */\r\n    function removeOffer(uint256 _tokenId) external;\r\n\r\n    /**\r\n    * Executes the purchase of _tokenId.\r\n    * Sends the funds to the seller and transfers the token using transferFrom in Dragoncontract.\r\n    * Emits the MarketTransaction event with txType \"Buy\".\r\n    * Requirement: The msg.value needs to equal the price of _tokenId\r\n    * Requirement: There must be an active offer for _tokenId\r\n     */\r\n    function buyDragon(uint256 _tokenId, address payable _seller) external payable;\r\n}\r\n",
  "sourcePath": "C:\\Markus-Dragons\\contracts\\IDragonMarketplace.sol",
  "ast": {
    "absolutePath": "/C/Markus-Dragons/contracts/IDragonMarketplace.sol",
    "exportedSymbols": {
      "Address": [
        2189
      ],
      "Context": [
        2210
      ],
      "Dragoncontract": [
        1541
      ],
      "Escrow": [
        2306
      ],
      "IDragonMarketplace": [
        1605
      ],
      "IERC721": [
        1740
      ],
      "IERC721Receiver": [
        1756
      ],
      "Ownable": [
        1893
      ]
    },
    "id": 1606,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1543,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:2"
      },
      {
        "absolutePath": "/C/Markus-Dragons/contracts/Dragoncontract.sol",
        "file": "./Dragoncontract.sol",
        "id": 1544,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1606,
        "sourceUnit": 1542,
        "src": "69:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/escrow/Escrow.sol",
        "file": "@openzeppelin/contracts/utils/escrow/Escrow.sol",
        "id": 1545,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1606,
        "sourceUnit": 2307,
        "src": "101:57:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 1605,
        "linearizedBaseContracts": [
          1605
        ],
        "name": "IDragonMarketplace",
        "nameLocation": "479:18:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 1553,
            "name": "MarketTransaction",
            "nameLocation": "513:17:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1552,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1547,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "TxType",
                  "nameLocation": "538:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1553,
                  "src": "531:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1546,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "531:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1549,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "554:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1553,
                  "src": "546:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1548,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "546:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1551,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "569:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1553,
                  "src": "561:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1550,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "561:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "530:47:2"
            },
            "src": "507:71:2"
          },
          {
            "documentation": {
              "id": 1554,
              "nodeType": "StructuredDocumentation",
              "src": "586:159:2",
              "text": " Set the current DragonContract address and initialize the instance of Dragoncontract.\n Requirement: Only the contract owner can call."
            },
            "functionSelector": "039f14b0",
            "id": 1559,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setDragonContract",
            "nameLocation": "760:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1556,
                  "mutability": "mutable",
                  "name": "_dragonContractAddress",
                  "nameLocation": "786:22:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1559,
                  "src": "778:30:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1555,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "778:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "777:32:2"
            },
            "returnParameters": {
              "id": 1558,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "818:0:2"
            },
            "scope": 1605,
            "src": "751:68:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1560,
              "nodeType": "StructuredDocumentation",
              "src": "827:121:2",
              "text": " Get the details about a offer for _tokenId. Throws an error if there is no active offer for _tokenId."
            },
            "functionSelector": "4579268a",
            "id": 1575,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getOffer",
            "nameLocation": "963:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1562,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "980:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1575,
                  "src": "972:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1561,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "972:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "971:18:2"
            },
            "returnParameters": {
              "id": 1574,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1565,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "1021:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1575,
                  "src": "1013:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1564,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1013:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1567,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "1037:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1575,
                  "src": "1029:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1566,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1029:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1569,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "1052:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1575,
                  "src": "1044:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1568,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1044:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1571,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1067:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1575,
                  "src": "1059:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1570,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1059:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1573,
                  "mutability": "mutable",
                  "name": "active",
                  "nameLocation": "1081:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1575,
                  "src": "1076:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1572,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1076:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1012:76:2"
            },
            "scope": 1605,
            "src": "954:135:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1576,
              "nodeType": "StructuredDocumentation",
              "src": "1097:104:2",
              "text": " Get all tokenId's that are currently for sale. Returns an empty arror if none exist."
            },
            "functionSelector": "49b3709f",
            "id": 1582,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAllTokenOnSale",
            "nameLocation": "1216:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1577,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1233:2:2"
            },
            "returnParameters": {
              "id": 1581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1580,
                  "mutability": "mutable",
                  "name": "listOfOffers",
                  "nameLocation": "1275:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1582,
                  "src": "1258:29:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1578,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1258:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1579,
                    "nodeType": "ArrayTypeName",
                    "src": "1258:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1257:31:2"
            },
            "scope": 1605,
            "src": "1207:82:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1583,
              "nodeType": "StructuredDocumentation",
              "src": "1297:396:2",
              "text": " Creates a new offer for _tokenId for the price _price.\n Emits the MarketTransaction event with txType \"Create offer\"\n Requirement: Only the owner of _tokenId can create an offer.\n Requirement: There can only be one active offer for a token at a time.\n Requirement: Marketplace contract (this) needs to be an approved operator when the offer is created."
            },
            "functionSelector": "941b055b",
            "id": 1590,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setOffer",
            "nameLocation": "1708:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1585,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "1725:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1590,
                  "src": "1717:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1584,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1717:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1587,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1741:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1590,
                  "src": "1733:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1586,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1733:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1716:34:2"
            },
            "returnParameters": {
              "id": 1589,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1759:0:2"
            },
            "scope": 1605,
            "src": "1699:61:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1591,
              "nodeType": "StructuredDocumentation",
              "src": "1768:183:2",
              "text": " Removes an existing offer.\n Emits the MarketTransaction event with txType \"Remove offer\"\n Requirement: Only the seller of _tokenId can remove an offer."
            },
            "functionSelector": "95a0f9c7",
            "id": 1596,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeOffer",
            "nameLocation": "1966:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1594,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1593,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1986:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1596,
                  "src": "1978:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1592,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1978:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1977:18:2"
            },
            "returnParameters": {
              "id": 1595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2004:0:2"
            },
            "scope": 1605,
            "src": "1957:48:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1597,
              "nodeType": "StructuredDocumentation",
              "src": "2013:347:2",
              "text": " Executes the purchase of _tokenId.\n Sends the funds to the seller and transfers the token using transferFrom in Dragoncontract.\n Emits the MarketTransaction event with txType \"Buy\".\n Requirement: The msg.value needs to equal the price of _tokenId\n Requirement: There must be an active offer for _tokenId"
            },
            "functionSelector": "3ef10162",
            "id": 1604,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "buyDragon",
            "nameLocation": "2375:9:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1599,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2393:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1604,
                  "src": "2385:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1598,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2385:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1601,
                  "mutability": "mutable",
                  "name": "_seller",
                  "nameLocation": "2419:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1604,
                  "src": "2403:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1600,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2403:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2384:43:2"
            },
            "returnParameters": {
              "id": 1603,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2444:0:2"
            },
            "scope": 1605,
            "src": "2366:79:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1606,
        "src": "469:1979:2",
        "usedErrors": []
      }
    ],
    "src": "42:2408:2"
  },
  "legacyAST": {
    "absolutePath": "/C/Markus-Dragons/contracts/IDragonMarketplace.sol",
    "exportedSymbols": {
      "Address": [
        2189
      ],
      "Context": [
        2210
      ],
      "Dragoncontract": [
        1541
      ],
      "Escrow": [
        2306
      ],
      "IDragonMarketplace": [
        1605
      ],
      "IERC721": [
        1740
      ],
      "IERC721Receiver": [
        1756
      ],
      "Ownable": [
        1893
      ]
    },
    "id": 1606,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1543,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:2"
      },
      {
        "absolutePath": "/C/Markus-Dragons/contracts/Dragoncontract.sol",
        "file": "./Dragoncontract.sol",
        "id": 1544,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1606,
        "sourceUnit": 1542,
        "src": "69:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/escrow/Escrow.sol",
        "file": "@openzeppelin/contracts/utils/escrow/Escrow.sol",
        "id": 1545,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1606,
        "sourceUnit": 2307,
        "src": "101:57:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 1605,
        "linearizedBaseContracts": [
          1605
        ],
        "name": "IDragonMarketplace",
        "nameLocation": "479:18:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 1553,
            "name": "MarketTransaction",
            "nameLocation": "513:17:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1552,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1547,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "TxType",
                  "nameLocation": "538:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1553,
                  "src": "531:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1546,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "531:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1549,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "554:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1553,
                  "src": "546:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1548,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "546:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1551,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "569:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1553,
                  "src": "561:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1550,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "561:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "530:47:2"
            },
            "src": "507:71:2"
          },
          {
            "documentation": {
              "id": 1554,
              "nodeType": "StructuredDocumentation",
              "src": "586:159:2",
              "text": " Set the current DragonContract address and initialize the instance of Dragoncontract.\n Requirement: Only the contract owner can call."
            },
            "functionSelector": "039f14b0",
            "id": 1559,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setDragonContract",
            "nameLocation": "760:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1556,
                  "mutability": "mutable",
                  "name": "_dragonContractAddress",
                  "nameLocation": "786:22:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1559,
                  "src": "778:30:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1555,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "778:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "777:32:2"
            },
            "returnParameters": {
              "id": 1558,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "818:0:2"
            },
            "scope": 1605,
            "src": "751:68:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1560,
              "nodeType": "StructuredDocumentation",
              "src": "827:121:2",
              "text": " Get the details about a offer for _tokenId. Throws an error if there is no active offer for _tokenId."
            },
            "functionSelector": "4579268a",
            "id": 1575,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getOffer",
            "nameLocation": "963:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1562,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "980:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1575,
                  "src": "972:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1561,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "972:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "971:18:2"
            },
            "returnParameters": {
              "id": 1574,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1565,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "1021:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1575,
                  "src": "1013:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1564,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1013:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1567,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "1037:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1575,
                  "src": "1029:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1566,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1029:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1569,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "1052:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1575,
                  "src": "1044:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1568,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1044:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1571,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1067:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1575,
                  "src": "1059:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1570,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1059:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1573,
                  "mutability": "mutable",
                  "name": "active",
                  "nameLocation": "1081:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1575,
                  "src": "1076:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1572,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1076:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1012:76:2"
            },
            "scope": 1605,
            "src": "954:135:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1576,
              "nodeType": "StructuredDocumentation",
              "src": "1097:104:2",
              "text": " Get all tokenId's that are currently for sale. Returns an empty arror if none exist."
            },
            "functionSelector": "49b3709f",
            "id": 1582,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAllTokenOnSale",
            "nameLocation": "1216:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1577,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1233:2:2"
            },
            "returnParameters": {
              "id": 1581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1580,
                  "mutability": "mutable",
                  "name": "listOfOffers",
                  "nameLocation": "1275:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1582,
                  "src": "1258:29:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1578,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1258:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1579,
                    "nodeType": "ArrayTypeName",
                    "src": "1258:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1257:31:2"
            },
            "scope": 1605,
            "src": "1207:82:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1583,
              "nodeType": "StructuredDocumentation",
              "src": "1297:396:2",
              "text": " Creates a new offer for _tokenId for the price _price.\n Emits the MarketTransaction event with txType \"Create offer\"\n Requirement: Only the owner of _tokenId can create an offer.\n Requirement: There can only be one active offer for a token at a time.\n Requirement: Marketplace contract (this) needs to be an approved operator when the offer is created."
            },
            "functionSelector": "941b055b",
            "id": 1590,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setOffer",
            "nameLocation": "1708:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1585,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "1725:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1590,
                  "src": "1717:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1584,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1717:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1587,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1741:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1590,
                  "src": "1733:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1586,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1733:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1716:34:2"
            },
            "returnParameters": {
              "id": 1589,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1759:0:2"
            },
            "scope": 1605,
            "src": "1699:61:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1591,
              "nodeType": "StructuredDocumentation",
              "src": "1768:183:2",
              "text": " Removes an existing offer.\n Emits the MarketTransaction event with txType \"Remove offer\"\n Requirement: Only the seller of _tokenId can remove an offer."
            },
            "functionSelector": "95a0f9c7",
            "id": 1596,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeOffer",
            "nameLocation": "1966:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1594,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1593,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1986:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1596,
                  "src": "1978:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1592,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1978:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1977:18:2"
            },
            "returnParameters": {
              "id": 1595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2004:0:2"
            },
            "scope": 1605,
            "src": "1957:48:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1597,
              "nodeType": "StructuredDocumentation",
              "src": "2013:347:2",
              "text": " Executes the purchase of _tokenId.\n Sends the funds to the seller and transfers the token using transferFrom in Dragoncontract.\n Emits the MarketTransaction event with txType \"Buy\".\n Requirement: The msg.value needs to equal the price of _tokenId\n Requirement: There must be an active offer for _tokenId"
            },
            "functionSelector": "3ef10162",
            "id": 1604,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "buyDragon",
            "nameLocation": "2375:9:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1599,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2393:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1604,
                  "src": "2385:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1598,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2385:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1601,
                  "mutability": "mutable",
                  "name": "_seller",
                  "nameLocation": "2419:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1604,
                  "src": "2403:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1600,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2403:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2384:43:2"
            },
            "returnParameters": {
              "id": 1603,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2444:0:2"
            },
            "scope": 1605,
            "src": "2366:79:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1606,
        "src": "469:1979:2",
        "usedErrors": []
      }
    ],
    "src": "42:2408:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.0",
  "updatedAt": "2021-07-22T08:14:59.890Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "buyDragon(uint256,address)": {
        "notice": "Executes the purchase of _tokenId. Sends the funds to the seller and transfers the token using transferFrom in Dragoncontract. Emits the MarketTransaction event with txType \"Buy\". Requirement: The msg.value needs to equal the price of _tokenId Requirement: There must be an active offer for _tokenId"
      },
      "getAllTokenOnSale()": {
        "notice": "Get all tokenId's that are currently for sale. Returns an empty arror if none exist."
      },
      "getOffer(uint256)": {
        "notice": "Get the details about a offer for _tokenId. Throws an error if there is no active offer for _tokenId."
      },
      "removeOffer(uint256)": {
        "notice": "Removes an existing offer. Emits the MarketTransaction event with txType \"Remove offer\" Requirement: Only the seller of _tokenId can remove an offer."
      },
      "setDragonContract(address)": {
        "notice": "Set the current DragonContract address and initialize the instance of Dragoncontract. Requirement: Only the contract owner can call."
      },
      "setOffer(uint256,uint256)": {
        "notice": "Creates a new offer for _tokenId for the price _price. Emits the MarketTransaction event with txType \"Create offer\" Requirement: Only the owner of _tokenId can create an offer. Requirement: There can only be one active offer for a token at a time. Requirement: Marketplace contract (this) needs to be an approved operator when the offer is created."
      }
    },
    "version": 1
  }
}